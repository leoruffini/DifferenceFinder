import os
from fastapi import FastAPI, File, UploadFile, HTTPException
from fastapi.responses import JSONResponse
from docx import Document
import openai
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Initialize OpenAI API
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
if not OPENAI_API_KEY:
    raise EnvironmentError("OPENAI_API_KEY not found in environment variables.")
openai.api_key = OPENAI_API_KEY

app = FastAPI(title="DOCX Summarizer and Quiz Generator")

class DocxProcessor:
    def __init__(self, file: UploadFile):
        self.file = file

    def extract_text(self) -> str:
        doc = Document(self.file.file)
        return "\n".join([para.text for para in doc.paragraphs])

class OpenAIService:
    @staticmethod
    def get_summary_and_quiz(text: str) -> dict:
        prompt = f"""
        Summarize the following text and create a 5-question quiz based on it:

        {text}

        Format your response as follows:
        Summary: [Your summary here]

        Quiz:
        1. [Question 1]
        2. [Question 2]
        3. [Question 3]
        4. [Question 4]
        5. [Question 5]
        """

        response = openai.chat.completions.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "You are an AI that summarizes text and creates quizzes."},
                {"role": "user", "content": prompt}
            ],
            max_tokens=1000,
            temperature=0.7,
        )

        return response.choices[0].message.content

@app.post("/process-docx/")
async def process_docx(file: UploadFile = File(...)):
    if file.content_type != 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':
        raise HTTPException(status_code=400, detail="File must be a .docx document.")

    processor = DocxProcessor(file)
    text = processor.extract_text()
    result = OpenAIService.get_summary_and_quiz(text)

    return JSONResponse(content={"result": result})

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)